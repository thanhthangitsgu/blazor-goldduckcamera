@if (ShowConfirmation)
{
    <div class="modal fade show d-block" id="exampleModal" tabindex="-1" role="dialog" style="display:block; background-color: rgba(10,10,10,.8);">
        <div class="modal-dialog modal-dialog-scrollable" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel"  style="padding-bottom:0px">@ConfirmationTitle</h5>
                </div>
                <div class="modal-body">
                    @ConfirmationMessage
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal"
                        @onclick="() => OnConfirmationChange(false)">
                        Cancel
                    </button>
                    <button type="button" class="btn btn-danger"
                        @onclick="() => OnConfirmationChange(true)">
                        Delete
                    </button>
                </div>
            </div>
        </div>
    </div>
}
@code {
    protected bool ShowConfirmation { get; set; }

    [Parameter]
    public string ConfirmationTitle { get; set; } = "Confirm Delete";

    [Parameter]
    public string ConfirmationMessage { get; set; } = "Are you sure you want to delete";

    public void Show()
    {
        ShowConfirmation = true;
        StateHasChanged();
    }

    [Parameter]
    public EventCallback<bool> ConfirmationChanged { get; set; }

    protected async Task OnConfirmationChange(bool value)
    {
        ShowConfirmation = false;
        await ConfirmationChanged.InvokeAsync(value);
    }

}
